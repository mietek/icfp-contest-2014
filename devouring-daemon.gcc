LDC 1          ; initial state
LDC 1
CONS
LDF 6
CONS
RTN
LD 0 1         ; load world state ; @stepFunction
CDR            ; lambda-man status
CAR
CDR            ; and his position
CAR
LD 0 1         ; load world state
CDR            ; l-man again
CAR
CDR            ; extract direction
CDR
CAR
LD 0 1
CDR            ; extract l-man again
CAR
CDR            ; as well as his position
CAR
LD 0 0         ; compare with previous position
LDF 168
AP 2
LD 0 1         ; extract current world map
CAR
LD 0 1         ; load some entropy from the world
CDR            ; extract ghosts
CDR
CAR
CAR            ; take first from the list
CDR            ; then his coords
CAR
CAR            ; and get the value of x
LD 0 1         ; load world state ;
CDR            ; lambda-man status
CAR
CDR            ; and his position again
CAR
LDF 44
AP 5
CONS           ; return (curr_pos, new_dir)
RTN
LD 0 0         ; current direction ; @chooseNewDirection
LD 0 1         ; is it stuck?
TSEL 47 53
LD 0 3         ; pseudo-RNG seed ; @changeDirection
LDC 3          ; 1/3 chance it will go counter-clockwise
LDF 180
AP 2
LDF 58
AP 2
LD 0 2         ; but maybe it's better to follow dots ; @continue
LD 0 4
LDF 69
AP 3
RTN
LD 0 0         ; previous direction ; @rotate
LD 0 1         ; rotation type
TSEL 61 63
LDC 2          ; @counterClockWise
ADD
LDC 1          ; @clockWise
ADD
LDC 4
LDF 180
AP 2
RTN
LD 0 1         ; the map ; @followDots
LD 0 2         ; l-man position
LDC 1          ; check right
LDC 0
CONS
LDF 143
AP 2
LDF 119
AP 2
TSEL 79 81
LDC 1          ; @grabFoodRight
RTN
LD 0 1         ; @checkFoodLeft
LD 0 2         ; l-man position
LDC -1         ; check left
LDC 0
CONS
LDF 143
AP 2
LDF 119
AP 2
TSEL 91 93
LDC 3          ; @grabFoodLeft
RTN
LD 0 1         ; @checkFoodDown
LD 0 2         ; l-man position
LDC 0          ; check down
LDC 1
CONS
LDF 143
AP 2
LDF 119
AP 2
TSEL 103 105
LDC 2          ; @grabFoodDown
RTN
LD 0 1         ; @checkFoodUp
LD 0 2         ; l-man position
LDC 0          ; check up
LDC -1
CONS
LDF 143
AP 2
LDF 119
AP 2
TSEL 115 117
LDC 0          ; @grabFoodUp
RTN
LD 0 0         ; no food, no direction change ; @noFood
RTN
LD 0 0         ; the world ; @isThereFood
LD 0 1         ; position to check
CDR            ; which row
DUM 2
LDF 155
RAP 2
LD 0 1
CAR            ; which cell in row
DUM 2
LDF 155
RAP 2
LDC 2          ; food = 2 | 3
LDC 3
LDF 135
AP 3
RTN
LD 0 0         ; @isInRange
LD 0 1
CGTE
LD 0 2
LD 0 0
CGTE
MUL
RTN
LD 0 0         ; @addVectors
CAR
LD 0 1
CAR
ADD
LD 0 0
CDR
LD 0 1
CDR
ADD
CONS
RTN
LD 0 0         ; list ; @nth
LD 0 1         ; position
LDC 0
CGT
TSEL 162 160
CAR            ; just get head ; @head
RTN
CDR            ; take tail ; @tail
LD 0 1         ; subtract one
LDC 1
SUB
LDF 155
TAP 2
LD 0 0         ; @comparePairs
CAR
LD 0 1
CAR
CEQ
LD 0 0
CDR
LD 0 1
CDR
CEQ
MUL            ; MUL = AND
RTN
LD 0 0         ; @modulo
LD 0 1
LD 0 0
LD 0 1
DIV
MUL
SUB
RTN
